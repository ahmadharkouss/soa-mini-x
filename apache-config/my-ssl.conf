<VirtualHost *:443>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	#ErrorLog ${APACHE_LOG_DIR}/error.log
	#CustomLog ${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf

    ServerName x.devgains.com
    SSLCertificateFile /usr/local/apache2/conf/fullchain.pem
    SSLCertificateKeyFile /usr/local/apache2/conf/privkey.pem
    Include /usr/local/apache2/conf/options-ssl-apache.conf
    #SSLCertificateFile "/usr/local/apache2/conf/server.crt"
    #SSLCertificateKeyFile "/usr/local/apache2/conf/server.key"





	ProxyPreserveHost On
    ProxyRequests Off
    ProxyAddHeaders On
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-Port "443"

    #ServerSignature   Off
    #HostnameLookups   Off
    #ProxyPreserveHost On
    #Header unset X-Frame-Options
    #ProxyRequests Off

    # Root
    <Location />
        ProxyPass http://soa_backend:4000/
        ProxyPassReverse http://soa_backend:4000/
        Require all granted
    </Location>
    
    # Public API
    <Location /public>
        ProxyPass http://soa_backend:4000/public
        ProxyPassReverse http://soa_backend:4000/public
        Require all granted
    </Location>

    OIDCCryptoPassphrase a-random-secret-used-by-apache-oidc-and-balancer

    OIDCProviderMetadataURL https://x.devgains.com/auth/realms/apache-realm/.well-known/openid-configuration
    #OIDCSSLValidateServer Off
    #OIDCOAuthSSLValidateServer Off
    OIDCClientID apache
    OIDCClientSecret W7kT1jpJDRgyX9B2BvG6b932pIqeUr6x
    OIDCRedirectURI https://x.devgains.com/private/redirect_uri
    OIDCDefaultURL https://x.devgains.com/private/
    OIDCRemoteUserClaim preferred_username
    OIDCXForwardedHeaders X-Forwarded-Host
    #OIDCXForwardedHeaders X-Forwarded-Proto
     #OIDCInfoHook "expr=env('OIDC_CLAIMS')"
        # Define what claims and tokens to expose
    OIDCInfoHook iat access_token access_token_expires id_token userinfo refresh_token session
   # Private API
    <Location /private>
        ProxyPass http://soa_backend:4000/private
        ProxyPassReverse http://soa_backend:4000/private
        #AuthType Basic
        #AuthName "SOA PRIVATE API"
        #AuthBasicProvider file
        #AuthUserFile /usr/local/apache2/conf/.htpasswd
        #Require valid-user
        AuthType openid-connect
        Require valid-user
	#OIDCInfoHook "expr=env('OIDC_CLAIMS')"
    	# Define what claims and tokens to expose
    	#OIDCInfoHookParams iat access_token access_token_expires id_token userinfo refresh_token session
    </Location>


   <Location /auth>
      proxyPass http://soa_keycloak:8080/
      ProxyPassReverse http://soa_keycloak:8080/
      OIDCUnAuthAction pass
    </Location>


    
</VirtualHost>
