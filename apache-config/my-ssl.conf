<VirtualHost *:443>

    ServerName birder.epita.fr
    DocumentRoot /usr/local/apache2/htdocs

    SSLEngine on
    SSLCertificateFile "/usr/local/apache2/conf/server.crt"
    SSLCertificateKeyFile "/usr/local/apache2/conf/server.key"

     #ErrorLog ${APACHE_LOG_DIR}/error.log
     #CustomLog ${APACHE_LOG_DIR}/access.log combined
    #this is required by mod_auth_openidc
    #OIDCCryptoPassphrase a-random-secret-used-by-apache-oidc-and-balancer

    #OIDCProviderMetadataURL http:///soa_keycloak:8080/realms/apache-realm/.well-known/openid-configuration

    #OIDCClientID apache
    #OIDCClientSecret XaWywc5pSy4gXB1NxeXEpxPblcF1XV5p
    #OIDCRedirectURI http://localhost/private/redirect_uri

    # maps the preferred_username claim to the REMOTE_USER environment variable
    #OIDCRemoteUserClaim preferred_username
    ProxyPreserveHost On
    ProxyRequests Off
    ProxyAddHeaders On
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-Port "443"

    #ServerSignature   Off
    #HostnameLookups   Off
    #ProxyPreserveHost On
    #Header unset X-Frame-Options
    #ProxyRequests Off

    # Root
    <Location />
        ProxyPass http://soa_backend:4000/
        ProxyPassReverse http://soa_backend:4000/
        Require all granted
    </Location>
    
    # Public API
    <Location /public>
        ProxyPass http://soa_backend:4000/public
        ProxyPassReverse http://soa_backend:4000/public
        Require all granted
    </Location>

    OIDCCryptoPassphrase a-random-secret-used-by-apache-oidc-and-balancer

    OIDCProviderMetadataURL http://soa_keycloak:8080/realms/apache-realm/.well-known/openid-configuration
    OIDCSSLValidateServer Off
    OIDCOAuthSSLValidateServer Off
    OIDCClientID apache
    OIDCClientSecret bcqBySiZnGr4rGC5DB3kwG42PebikgLJ
    OIDCRedirectURI https://localhost/private/redirect_uri
    OIDCDefaultURL https://localhost/private/
    OIDCInfoHook iat access_token access_token_expires id_token refresh_token userinfo session

   # Private API
    <Location /private>
        ProxyPass http://soa_backend:4000/private
        ProxyPassReverse http://soa_backend:4000/private
        #AuthType Basic
        #AuthName "SOA PRIVATE API"
        #AuthBasicProvider file
        #AuthUserFile /usr/local/apache2/conf/.htpasswd
        #Require valid-user
        AuthType openid-connect
        Require valid-user
    </Location>


   <Location /auth>
      proxyPass http://soa_keycloak:8080/
      ProxyPassReverse http://soa_keycloak:8080/
      OIDCUnAuthAction pass
    </Location>

</VirtualHost>

