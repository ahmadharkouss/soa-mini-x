services:
  soa_backend:
    build: ./backend
    container_name: soa_backend
    ports:
      - "4000:4000"
    depends_on:
      - soa_postgres_db
    environment:
      - DB_HOST=soa_postgres_db
      - DB_PORT=5432
      - DB_USER=backend
      - DB_PASSWORD=backend
      - DB_NAME=backend
    restart: always

  soa_postgres_db:
    image: postgres:16
    container_name: soa_postgres_db
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: backend
      POSTGRES_PASSWORD: backend
      POSTGRES_DB: backend
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  soa_redis:
    image: "redis:alpine"
    container_name: soa_redis
    command: redis-server
    ports:
      - 6379:6379
    expose:
      - "6379"
    restart: unless-stopped
  
  soa_keycloak:
    image: quay.io/keycloak/keycloak:25.0.1
    container_name: soa_keycloak
    ports:
      - "8080:8080"
    environment:
      KC_HOSTNAME: localhost # to be accessed from the host machine
      KC_HOSTNAME_PORT: 8080
      # Database configuration
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://soa_keycloak_db/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak  
      # Keycloak configuration
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      # Admin user configuration
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      # proxy mode
      PROXY_ADDRESS_FORWARDING: true 
    depends_on:
       -  soa_keycloak_db
    command:
       - 'start-dev'
    restart: unless-stopped

  soa_keycloak_db:
  # Do not expose this container port to the outside world for security reasons
    image: postgres:16
    container_name: soa_keycloak_db
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DB: keycloak
    volumes:
      - keycloak_pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  
  soa_apache:
    build:
      context: .
      dockerfile: Dockerfile.apache
    container_name: soa_apache
    ports:
      - "443:443"
    depends_on:
      - soa_backend
      - soa_keycloak
   # restart: unless-stopped

volumes:
  pgdata:
  keycloak_pgdata:
